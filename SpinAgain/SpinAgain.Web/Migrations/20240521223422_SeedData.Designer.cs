// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpinAgain.Web.Data;

#nullable disable

namespace SpinAgain.Web.Migrations
{
    [DbContext(typeof(SpinAgainDBContext))]
    [Migration("20240521223422_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpinAgain.Web.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CC")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeterReading")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "TVS",
                            CC = 200m,
                            ImageUrl = "",
                            MeterReading = 0,
                            ModelName = "Apache RTR 200",
                            Price = 175000m,
                            RegistrationNo = "ABC123"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Yamaha",
                            CC = 150m,
                            ImageUrl = "",
                            MeterReading = 0,
                            ModelName = "FZ V4",
                            Price = 155000m,
                            RegistrationNo = "DEF456"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Bajaj",
                            CC = 200m,
                            ImageUrl = "",
                            MeterReading = 0,
                            ModelName = "Pulsar 200",
                            Price = 160000m,
                            RegistrationNo = "GHI789"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Yamaha",
                            CC = 155m,
                            ImageUrl = "",
                            MeterReading = 0,
                            ModelName = "MT-15",
                            Price = 172000m,
                            RegistrationNo = "JKL012"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
